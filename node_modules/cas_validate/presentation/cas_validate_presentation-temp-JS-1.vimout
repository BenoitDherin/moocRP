\SYNBOL{}RedisClient.prototype.send_command =\SYNEOL{}
\SYNBOL{}       \SYN[Identifier]{function} \SYN[javaScriptParens]{(}command, args, callback\SYN[javaScriptParens]{)} \SYN[Identifier]{\{}\SYNEOL{}
\SYNBOL{}    \SYN[Statement]{if} \SYN[javaScriptParens]{(}\SYN[Type]{Array}.isArray\SYN[javaScriptParens]{(}args\SYN[javaScriptParens]{))} \SYN[Identifier]{\{}\SYNEOL{}
\SYNBOL{}        \SYN[Statement]{if} \SYN[javaScriptParens]{(}\SYN[Statement]{typeof} callback === \SYN[Constant]{"function"}\SYN[javaScriptParens]{)} \SYN[Identifier]{\{}\SYNEOL{}
\SYNBOL{}        \SYN[Identifier]{\}} \SYN[Statement]{else} \SYN[Statement]{if} \SYN[javaScriptParens]{(}! callback\SYN[javaScriptParens]{)} \SYN[Identifier]{\{}\SYNEOL{}
\SYNBOL{}            last_arg_type = \SYN[Statement]{typeof} args\SYN[Identifier]{[}args.length\SYN[javaScriptValue]{-1}\SYN[Identifier]{]};\SYNEOL{}
\SYNBOL{}            \SYN[Statement]{if} \SYN[javaScriptParens]{(}last_arg_type === \SYN[Constant]{"function"}\SYNEOL{}
\SYNBOL{}                || last_arg_type === \SYN[Constant]{"undefined"}\SYN[javaScriptParens]{)} \SYN[Identifier]{\{}\SYNEOL{}
\SYNBOL{}                callback = args.pop\SYN[javaScriptParens]{()};\SYNEOL{}
\SYNBOL{}            \SYN[Identifier]{\}}\SYNEOL{}
\SYNBOL{}        \SYN[Identifier]{\}} \SYN[Statement]{else} \SYN[Identifier]{\{} \SYN[Statement]{throw} \SYN[Statement]{new} Error\SYN[javaScriptParens]{(}\SYN[Constant]{"..."}\SYN[javaScriptParens]{)};\SYN[Identifier]{\}}\SYNEOL{}
\SYNBOL{}    \SYN[Identifier]{\}} \SYN[Statement]{else} \SYN[Identifier]{\{} \SYN[Statement]{throw} \SYN[Statement]{new} Error\SYN[javaScriptParens]{(}\SYN[Constant]{"..."}\SYN[javaScriptParens]{)}; \SYN[Identifier]{\}}\SYNEOL{}
\SYNBOL{}\SYN[Identifier]{\}}\SYNEOL{}
