<!DOCTYPE html>
<html>
  <head>
    <title>moocRP - <%- title %></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `link` tags, or asynchronously
        on the client using a solution like AMD (RequireJS).  Or, if you like, you can
        take advantage of Sails' boilerplate asset management.

        By default, stylesheets from your `assets/linker/styles` folder are included
        here automatically.  Both CSS (.css) and LESS (.less) are supported.
        In production, your styles will be minified and concatenated into a single file.
        
        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/linker/styles/bootstrap.css">
    <link rel="stylesheet" href="/linker/styles/custom.css">
    <link rel="stylesheet" href="/linker/styles/grid.css">
    <link rel="stylesheet" href="/linker/styles/normalize.css">
    <!--STYLES END-->
  </head>

  <body> 
    <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container fluid">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="/home">moocRP</a>
        </div>
        <div class="navbar-collapse collapse">

          <!-- About -->
          <a id="About" class="navbar-button" href="/about">About</a>


          <!-- Login button -->
          <% if (!session.authenticated) { %>
            <div class="navbar-right">
              <a class="btn btn-default navbar-btn navbar-right" href="/login">Login</a>
            </div>
          <% } %>
          

          <!-- Can only see these when logged in -->
          <% if (session.authenticated) { %>
            <!-- Dashboard -->
            <a id="Dashboard" class="navbar-button" href="/dashboard">Dashboard</a>
            <a id="Analytics" class="navbar-button" href="/analytics">Analytics</a>
            <% if (session.user && session.user.admin) { %>
                <!-- Admin Panel, Qualifiers -->
                <a id="Admin Panel"class="navbar-button" href="/admin/manageusers">User Administration</a>
                <a id="Manage Qualifiers" class="navbar-button" href="/admin/managequalifiers">Qualifiers</a>
            <% } %>

          <div class="navbar-right">
            <% if (session.user && session.user.first_name) { %>
              <div class="navbar-text">Logged in as <font color="lightblue"><%= session.user.first_name %></font></div>
            <% } %>
            <a class="btn btn-default navbar-btn navbar-right" href="/logout">Logout</a>
          </div>
          <% } %>
          <!-- end section -->

        </div>
      </div>
    </nav>

    <div id="fade-container" class="container fluid">
    <%- body %>
    </div>

    <div class="container">
      <hr>
      <footer class="footer">
        <div class="pull-right">
          <div>Terms of Use - Privacy Policy - Contact</div>
        </div>
        <br>
        <div class="pull-right">
          <div>&copy; 2014 moocRP. Built on <a href="http://sailsjs.com/">sails.js</a></div>
        </div>
      </footer>
    </div>


    <!--
        Client-side Templates
        ========================

    		HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/linker/templates` folder, then
        include them here automatically.
        
        To customize this behavior to fit your needs, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your templates using a server-side stringfile
              before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' boilerplate asset management.

      By default, filesin your `assets/linker/js` folder are included here
      automatically.  Both JavaScript (.js) and CoffeeScript (.coffee) are supported.
      In production, your scripts will be minified and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit your Gruntfile.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->
    <!--SCRIPTS-->
    <script src="/linker/js/socket.io.js"></script>
    <script src="/linker/js/sails.io.js"></script>
    <script src="/linker/js/app.js"></script>
    <script src="/linker/js/jquery.js"></script>
    <script src="/linker/js/bootstrap.js"></script>
    <script src="/linker/js/flashdata.js"></script>
    <script src="/linker/js/jquery-1.11.0.min.js"></script>
    <!--SCRIPTS END-->

    <script>
      // Assigning active tab
      $(document).ready(function(){
        var title = '<%- title %>';
        var nav = document.getElementById(title);
        var originalClass = nav.className;
        if (nav) {
          nav.className = 'navbar-active-button';
        }
      });
    </script>
  </body>
</html>
